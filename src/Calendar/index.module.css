.calendar {
  display: inline-block;
  padding: 16px;
  border-radius: 8px;
  background-color: var(--md-sys-color-surface-container-high); /* M3 Surface Container High */
  color: var(--md-sys-color-on-surface); /* M3 On Surface */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  max-width: 320px; /* Limit width */
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 16px;
}

.heading {
  font-size: 1.1rem;
  font-weight: 500;
  color: var(--md-sys-color-on-surface); /* M3 On Surface */
}

/* Style react-aria Button components used for prev/next */
.header > button {
  appearance: none;
  border: none;
  background: none;
  padding: 8px;
  cursor: pointer;
  color: var(--md-sys-color-primary); /* M3 Primary */
  border-radius: 50%;
  transition: background-color 0.2s ease;
}
.header > button:hover {
  background-color: var(--md-sys-color-primary-container); /* M3 Primary Container for hover */
}
.header > button[data-disabled] {
  color: var(--md-sys-color-on-surface-variant); /* M3 On Surface Variant for disabled */
  cursor: default;
  background-color: transparent;
}

.grid {
  width: 100%;
  border-collapse: collapse; /* Use collapse for cleaner borders */
}

.gridHeader {
  /* Styles for the row containing weekday names */
}

.headerCell {
  padding: 8px;
  text-align: center;
  font-size: 0.8rem;
  font-weight: 500;
  color: var(--md-sys-color-on-surface-variant); /* M3 On Surface Variant */
}

.gridBody {
  /* Styles for the main grid body containing dates */
}

.cell {
  padding: 0; /* Remove padding from the cell itself */
  text-align: center;
  cursor: pointer;
  border-radius: 50%; /* Make cells circular */
  position: relative; /* Needed for cellContent positioning */
  width: 40px; /* Fixed width */
  height: 40px; /* Fixed height */
  border: 1px solid transparent; /* Add transparent border for consistent spacing */
  box-sizing: border-box;
  /* Remove individual cell border-radius for range selection */
  border-radius: 0;
  outline: none; /* Remove default outline */
}

.cellContent {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  border-radius: 50%; /* Keep content circular */
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s
    ease;
  color: var(--md-sys-color-on-surface); /* Default text color */
  position: relative; /* For pseudo-elements */
  z-index: 1; /* Ensure content is above range highlight */
}

/* Range Selection Styles */
.cell[data-selection-start] .cellContent,
.cell[data-selection-end] .cellContent {
  background-color: var(--md-sys-color-primary); /* M3 Primary for start/end */
  color: var(--md-sys-color-on-primary); /* M3 On Primary for selected text */
}

.cell[data-selection-start]:not([data-selection-end]) {
  border-start-start-radius: 50%;
  border-end-start-radius: 50%;
}

.cell[data-selection-end]:not([data-selection-start]) {
  border-start-end-radius: 50%;
  border-end-end-radius: 50%;
}

/* Highlight for the range between start and end */
.cell
  .cellContent[data-selected]:not([data-selection-start]):not(
    [data-selection-end]
  ) {
  background-color: var(--md-sys-color-primary-container); /* M3 Primary Container for range */
  color: var(--md-sys-color-on-primary-container); /* M3 On Primary Container for range text */
  border-radius: 0; /* 範囲選択中は円形にしない */
}

/* Hover effect */
.cell .cellContent[data-hovered]:not([data-selected]) {
  background-color: var(--md-sys-color-surface-container-highest); /* M3 Surface Container Highest for hover */
}
/* Hover effect over selected range */
.cell
  .cellContent[data-hovered][data-selected]:not([data-selection-start]):not(
    [data-selection-end]
  ) {
  background-color: color-mix(
    in srgb,
    var(--md-sys-color-primary-container) 80%,
    black 20%
  );
}
/* 開始/終了点のホバー */
.cell .cellContent[data-hovered][data-selection-start],
.cell .cellContent[data-hovered][data-selection-end] {
  background-color: color-mix(
    in srgb,
    var(--md-sys-color-primary) 80%,
    black 20%
  );
}

.cell[data-pressed] .cellContent {
  background-color: var(--md-sys-color-primary-container); /* M3 Primary Container for press */
}

/* Single selection style (keep original) */
.cell[data-selected]:not([data-selection-start]):not([data-selection-end])
  .cellContent {
  background-color: var(--md-sys-color-primary); /* M3 Primary for selected */
  color: var(--md-sys-color-on-primary); /* M3 On Primary for selected text */
}

.cell[data-unavailable] .cellContent {
  color: var(--md-sys-color-on-surface-variant); /* M3 On Surface Variant for unavailable */
  text-decoration: line-through;
}

.cell[data-disabled] {
  cursor: default;
}
.cell[data-disabled] .cellContent {
  color: var(--md-sys-color-outline); /* M3 Outline for disabled */
  background-color: transparent;
}

.cell[data-outside-month] .cellContent {
  color: var(--md-sys-color-on-surface-variant); /* Dim dates outside the current month */
}

.cell[data-focused] .cellContent {
  outline: 2px solid var(--md-sys-color-primary); /* M3 Primary for focus ring */
  outline-offset: 1px; /* Adjust offset */
}

/* Today's date styling */
.cell[data-today] .cellContent {
  border: 1px solid var(--md-sys-color-primary); /* M3 Primary border for today */
  font-weight: bold;
}
/* Ensure today's border doesn't interfere with selection background */
.cell[data-today][data-selected] .cellContent {
  border-color: transparent;
}
.cell[data-today][data-selection-start] .cellContent,
.cell[data-today][data-selection-end] .cellContent {
  border-color: transparent; /* Hide border when it's a selection endpoint */
}
