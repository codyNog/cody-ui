.toastRegion {
  position: fixed;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column-reverse; /* 新しいものが上に表示されるように */
  gap: 8px;
  z-index: 1000;
  max-width: 600px; /* Snackbarの最大幅 */
  width: calc(100% - 40px); /* 左右に20pxのマージン */
}

.toast {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 12px 16px;
  background-color: var(--md-sys-color-inverse-surface);
  color: var(--md-sys-color-inverse-on-surface);
  border-radius: 4px;
  box-shadow: var(--md-sys-elevation-level2);
  min-height: 48px; /* Material DesignのSnackbarの高さ */
  font-family: sans-serif; /* プロジェクトのフォントに合わせて変更 */
  font-size: 14px;
  line-height: 1.4;
  /* アニメーション用 (例) */
  /* animation: fadeIn 0.3s ease-out, fadeOut 0.3s ease-in 4.7s forwards; */ /* 5秒表示 - react-aria-componentsが制御 */
}

.toast[data-entering] {
  animation: fadeIn 0.3s ease-out forwards;
}

.toast[data-exiting] {
  animation: fadeOut 0.3s ease-in forwards;
}

.toastContent {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 4px; /* タイトルと説明の間隔 */
}

.title {
  font-weight: bold;
}

.description {
  /* 特にスタイルなし */
}

.actions {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-left: 16px; /* テキストとアクションの間のスペース */
}

.actionButton {
  background: none;
  border: none;
  color: var(--md-sys-color-inverse-primary);
  font-weight: bold;
  text-transform: uppercase;
  cursor: pointer;
  padding: 8px; /* クリック領域を確保 */
  border-radius: 4px;
}

.actionButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.closeButton {
  background: none;
  border: none;
  color: var(--md-sys-color-on-inverse-surface);
  opacity: 0.7;
  cursor: pointer;
  padding: 8px; /* クリック領域を確保 */
  font-size: 16px; /* アイコンサイズ調整 */
  line-height: 1;
  border-radius: 50%; /* 丸いボタンにする場合 */
}

.closeButton:hover {
  opacity: 1;
  background-color: rgba(255, 255, 255, 0.1);
}

/* アニメーションのキーフレーム */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(20px);
  }
}
