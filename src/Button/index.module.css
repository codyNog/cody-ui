/* Base styles */
.button {
  /* MD3 Base styles */
  position: relative; /* Needed for state layer */
  overflow: hidden; /* Needed for state layer */
  border-radius: var(--space-5); /* 20px, using space variable */
  padding: var(--space-2) var(--space-6); /* 8px 24px */
  border: none;
  cursor: pointer;
  transition: box-shadow 0.2s ease-in-out; /* Only transition shadow */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  outline: none; /* react-aria handles focus */
  -webkit-tap-highlight-color: transparent; /* Remove tap highlight on mobile */
}

/* State Layer */
.button::before {
  content: "";
  position: absolute;
  inset: 0;
  background-color: currentcolor; /* Use text color for layer */
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  z-index: 0; /* Behind content */
}

.button.pressed::before {
  opacity: var(--md-sys-state-pressed-state-layer-opacity, 0.12);
  transition: opacity 0.1s cubic-bezier(0.4, 0, 0.2, 1);
}

.button > * {
  position: relative; /* Ensure content is above state layer */
  z-index: 1;
}

/* Hover, Focus, Pressed States using State Layer */
.button.hovered::before {
  opacity: var(--md-sys-state-hover-state-layer-opacity);
}
.button.focused::before {
  opacity: var(--md-sys-state-focus-state-layer-opacity);
}
.button.pressed::before {
  opacity: var(--md-sys-state-pressed-state-layer-opacity);
}

/* Disabled State Base */
.button.disabled {
  color: var(--md-sys-color-on-surface);
  opacity: 0.38; /* Text disabled opacity */
  cursor: not-allowed;
  box-shadow: var(--md-sys-elevation-level0); /* Use M3 token */
}
.button.disabled::before {
  opacity: 0; /* No state layer on disabled */
}

/* Variant styles */
.filled {
  background-color: var(--md-sys-color-primary);
  color: var(--md-sys-color-on-primary);
  box-shadow: var(--md-sys-elevation-level0); /* Use M3 token */
}
.filled.hovered {
  box-shadow: var(--md-sys-elevation-level1); /* Use M3 token */
}
/* .filled.focused uses state layer */
.filled.pressed {
  box-shadow: var(--md-sys-elevation-level0); /* Use M3 token */
}
.filled.disabled {
  background-color: var(--md-sys-color-on-surface);
  /* Use base disabled color/opacity */
  opacity: 1; /* Override base opacity for background */
  background-color: color-mix(
    in srgb,
    var(--md-sys-color-on-surface) 12%,
    transparent
  );
}

.outlined {
  background-color: transparent;
  color: var(--md-sys-color-primary);
  border: 1px solid var(--md-sys-color-outline);
}
/* .outlined.hovered uses state layer */
.outlined.focused {
  border-color: var(--md-sys-color-primary); /* Focus border */
}
/* .outlined.pressed uses state layer */
.outlined.disabled {
  border-color: var(--md-sys-color-on-surface);
  /* Use base disabled color/opacity */
  border-color: color-mix(
    in srgb,
    var(--md-sys-color-on-surface) 12%,
    transparent
  );
}

.text {
  background-color: transparent;
  color: var(--md-sys-color-primary);
  padding: var(--space-2) var(--space-3); /* 8px 12px */
  border: none; /* Ensure no border */
}
/* .text.hovered uses state layer */
/* .text.focused uses state layer */
/* .text.pressed uses state layer */
.text.disabled {
  background-color: transparent;
  border: none;
  /* Use base disabled color/opacity */
}

.elevated {
  background-color: var(--md-sys-color-surface-container-low);
  color: var(--md-sys-color-primary);
  box-shadow: var(--md-sys-elevation-level1); /* Use M3 token */
}
.elevated.hovered {
  box-shadow: var(--md-sys-elevation-level2); /* Use M3 token */
}
/* .elevated.focused uses state layer */
.elevated.pressed {
  box-shadow: var(--md-sys-elevation-level1); /* Use M3 token - Elevated buttons retain level 1 on press */
}
.elevated.disabled {
  background-color: var(--md-sys-color-on-surface);
  /* Use base disabled color/opacity */
  opacity: 1; /* Override base opacity for background */
  background-color: color-mix(
    in srgb,
    var(--md-sys-color-on-surface) 12%,
    transparent
  );
}

.tonal {
  background-color: var(--md-sys-color-secondary-container);
  color: var(--md-sys-color-on-secondary-container);
  box-shadow: var(--md-sys-elevation-level0); /* Use M3 token */
}
.tonal.hovered {
  box-shadow: var(--md-sys-elevation-level1); /* Use M3 token */
}
/* .tonal.focused uses state layer */
.tonal.pressed {
  box-shadow: var(--md-sys-elevation-level0); /* Use M3 token */
}
.tonal.disabled {
  background-color: var(--md-sys-color-on-surface);
  /* Use base disabled color/opacity */
  opacity: 1; /* Override base opacity for background */
  background-color: color-mix(
    in srgb,
    var(--md-sys-color-on-surface) 12%,
    transparent
  );
}

/* Icon styles */
.iconWrapper {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 18px; /* Keep specific size for now */
  height: 18px;
}

.iconLeading {
  margin-right: var(--space-1); /* 4px */
}

/* Ripple styles */
.rippleContainer {
  position: absolute;
  inset: 0;
  overflow: hidden;
  border-radius: inherit; /* Match button's border radius */
  pointer-events: none; /* Allow clicks to pass through */
  z-index: 0; /* Ensure ripples are behind the content but above the background */
}

.ripple {
  position: absolute;
  border-radius: 50%;
  background-color: currentcolor; /* Use text color for ripple */
  opacity: var(--md-sys-state-pressed-state-layer-opacity, 0.12); /* Match pressed state opacity */
  transform: scale(0);
  animation: ripple-effect 1000ms ease-out; /* Changed timing function to ease-out */
  /* Center the ripple on the click coordinates */
  transform-origin: center;
  /* Adjust positioning based on transform origin */
  margin-left: -50%;
  margin-top: -50%;
  pointer-events: none;
}

@keyframes ripple-effect {
  to {
    transform: scale(4);
    opacity: 0;
  }
}
