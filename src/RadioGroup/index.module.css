/* src/RadioGroup/index.module.css */
.root {
  display: flex;
  flex-direction: column;
  gap: 0; /* Remove explicit gap between items */
  /* Font styles are now handled by Typography component */
  /* color: var(--md-sys-color-on-surface); Default text color - Handled by Typography */
}

.groupLabel {
  /* color: var(--md-sys-color-on-surface-variant); Group label color - Handled by Typography */
  /* Font styles are now handled by Typography component */
  margin-bottom: 8px; /* Space below the group label */
}

.radio {
  display: inline-flex; /* Align icon and label */
  align-items: center;
  position: relative; /* For absolute positioning of input */
  min-height: 40px; /* M3 Touch target size */
  padding: 8px 0; /* Vertical padding for touch target */
  cursor: pointer;
  gap: 12px; /* Space between radio icon and label */
  color: var(--md-sys-color-on-surface);
  -webkit-tap-highlight-color: transparent; /* Remove tap highlight on mobile */
}

.radio[data-disabled] {
  cursor: not-allowed; /* Change cursor to indicate non-interactive */
  color: var(--md-sys-color-on-surface-disabled);
  opacity: var(--md-sys-state-disabled-state-layer-opacity);
}

/* Visually hide the actual input but keep it accessible */
.input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
  pointer-events: none;
}

.indicator {
  position: relative; /* For centering the inner dot */
  display: flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 2px solid var(--md-sys-color-on-surface-variant);
  transition: border-color 150ms cubic-bezier(0.4, 0, 0.2, 1), background-color
    150ms cubic-bezier(0.4, 0, 0.2, 1);
  flex-shrink: 0; /* Prevent shrinking */
}

.indicator::before {
  /* Inner dot - hidden by default */
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: var(--md-sys-color-primary);
  transform: scale(0); /* Hidden */
  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);
}

/* Selected state */
.radio[data-selected] .indicator {
  border-color: var(--md-sys-color-primary);
}

.radio[data-selected] .indicator::before {
  transform: scale(1); /* Show inner dot */
}

/* Disabled state */
.radio[data-disabled] .indicator {
  border-color: var(--md-sys-color-on-surface-disabled);
}

.radio[data-disabled][data-selected] .indicator {
  border-color: var(--md-sys-color-on-surface-disabled);
  /* Remove background color from the indicator itself */
}

.radio[data-disabled][data-selected] .indicator::before {
  /* Set inner dot color to disabled color as per M3 */
  background-color: var(--md-sys-color-on-surface-disabled);
  transform: scale(1);
}

/* Hover state - add state layer */
.radio:not([data-disabled]):hover .indicator::after {
  content: "";
  position: absolute;
  width: 40px; /* State layer size */
  height: 40px;
  border-radius: 50%;
  background-color: var(--md-sys-color-on-surface);
  opacity: var(--md-sys-state-hover-state-layer-opacity);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none; /* Allow clicks to pass through */
}
.radio[data-selected]:not([data-disabled]):hover .indicator::after {
  background-color: var(--md-sys-color-primary); /* Use primary color for selected hover */
}

/* Focus state - add state layer */
.radio:not([data-disabled]):focus-visible .indicator::after {
  content: "";
  position: absolute;
  width: 40px; /* State layer size */
  height: 40px;
  border-radius: 50%;
  background-color: var(--md-sys-color-on-surface);
  opacity: var(--md-sys-state-focus-state-layer-opacity);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none; /* Allow clicks to pass through */
  outline: none; /* Remove default focus ring */
}
.radio[data-selected]:not([data-disabled]):focus-visible .indicator::after {
  background-color: var(--md-sys-color-primary); /* Use primary color for selected focus */
}

.radioLabel {
  /* Inherits font styles from .root by default */
  /* No specific styles needed unless overriding */
  user-select: none; /* Prevent text selection on click */
}

.radio[data-disabled] .radioLabel {
  /* Already handled by .radio[data-disabled] color and opacity */
}
