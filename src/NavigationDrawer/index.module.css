.root {
  /* 基本的なコンテナースタイル */
  display: flex;
  flex-direction: column;
  overflow-y: auto;
  /* M3 の Elevation Level 0 (Standard) or 1 (Modal) */
  /* ベースの背景色。 */
  background-color: var(--md-sys-color-surface-container, #f0f0f0); /* M3 Standard Drawer Surface Color */
  color: var(--md-sys-color-on-surface, #1c1b1f);
  height: 100%; /* 親要素に依存 */
}

.standard {
  width: 360px;
  /* background-color: var(--md-sys-color-surface, #fafdfd); */ /* .root で指定するため削除 */
  /* border-right: 1px solid var(--md-sys-color-outline-variant, #cac4d0); */ /* 角丸にするため削除 */
  /* Animation */
  transform: translateX(-100%); /* Initially hidden */
  opacity: 0;
  transition: transform 300ms ease-out, opacity 300ms ease-out; /* Smooth transition */
  border-top-right-radius: 16px; /* ユーザーの意図通り再度追加 */
  border-bottom-right-radius: 16px; /* ユーザーの意図通り再度追加 */
  /* 角丸を適用する場合、内容がはみ出ないように overflow: hidden が必要な場合がある */
  /* ただし、.root に overflow-y: auto があるため、競合や意図しない動作に注意 */
  /* 必要であれば .root の overflow 設定も見直す */
}

.standardVisible {
  transform: translateX(0); /* Visible state */
  opacity: 1;
}

.modalContent {
  /* vaul の Drawer.Content に適用するクラス */
  background-color: var(--md-sys-color-surface-container-low, #f7f2fa); /* M3 Modal Drawer Surface Color */
  display: flex;
  flex-direction: column;
  /* vaul が高さを管理するが、表示されない問題の対策として明示的に設定 */
  height: 100vh; /* Drawer が画面全体の高さを持つように */
  max-height: 100vh; /* 念のため */
  width: 360px; /* M3 Modal Drawer Width */
  padding: 12px; /* 上下のpaddingはM3に従う */
  box-sizing: border-box;
  position: fixed; /* vaul の direction="left" と合わせて左に固定 */
  left: 0;
  bottom: 0;
  top: 0; /* 上下いっぱいに広がるように */
  overflow-y: auto; /* 内容が多い場合にスクロールできるように */
  z-index: 50; /* Overlay より手前に表示されるように (vaul のデフォルトに合わせる) */
  border-top-right-radius: 16px;
  border-bottom-right-radius: 16px;
}

.modalOverlay {
  /* vaul の Drawer.Overlay に適用するクラス */
  background-color: var(--md-sys-color-scrim, rgba(0, 0, 0, 0.4));
  position: fixed;
  inset: 0;
}

.headline {
  /* M3 Title Small */
  /* Font styles are now handled by Typography component */
  padding: 16px; /* 上下左右のpaddingはM3に従う, 特に上は28pxだが、ここでは16pxで統一 */
  /* color: var(--md-sys-color-on-surface-variant, #49454f); Color is now handled by Typography component */
  margin-top: 12px; /* M3 modal drawerのheadlineの上部スペース */
}

.list {
  list-style: none;
  padding: 0 12px; /* 左右のpadding */
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: 4px; /* アイテム間のスペース */
}

.item {
  /* 各アイテムの共通スタイル */
  display: flex;
  align-items: center;
  height: 56px;
  padding: 0 16px 0 12px; /* 左はアイコン用に少し広め, 右はバッジ用に */
  border-radius: 28px; /* ユーザーフィードバックに基づき元の値に戻す (アイテム高さ56pxの半分) */
  cursor: pointer;
  box-sizing: border-box; /* border-radius の問題を解決するため */
  position: relative; /* State layer 用 */
  overflow: hidden; /* State layer 用 */
  /* color: var(--md-sys-color-on-surface-variant, #49454f); Color is now handled by Typography component */
  /* M3 Label Large */
  /* Font styles are now handled by Typography component */
  text-decoration: none; /* a タグのデフォルトスタイルをリセット */
}

.item:hover .stateLayer {
  background-color: var(
    --md-sys-color-on-surface-variant-hover,
    rgba(73, 69, 79, 0.08)
  );
}
.item:focus-visible .stateLayer {
  background-color: var(
    --md-sys-color-on-surface-variant-focus,
    rgba(73, 69, 79, 0.12)
  );
}
.item:active .stateLayer {
  background-color: var(
    --md-sys-color-on-surface-variant-pressed,
    rgba(73, 69, 79, 0.12)
  );
}

.itemActive {
  background-color: var(--md-sys-color-secondary-container, #e8def8);
  color: var(--md-sys-color-on-secondary-container, #1d192b);
}

.itemActive:hover .stateLayer {
  background-color: var(
    --md-sys-color-on-secondary-container-hover,
    rgba(29, 25, 43, 0.08)
  );
}
.itemActive:focus-visible .stateLayer {
  background-color: var(
    --md-sys-color-on-secondary-container-focus,
    rgba(29, 25, 43, 0.12)
  );
}
.itemActive:active .stateLayer {
  background-color: var(
    --md-sys-color-on-secondary-container-pressed,
    rgba(29, 25, 43, 0.12)
  );
}

.itemIcon {
  margin-right: 12px;
  display: inline-flex; /* アイコンのセンタリング */
  align-items: center;
  justify-content: center;
  width: 28px; /* サイズを24pxから28pxに変更 */
  height: 28px; /* サイズを24pxから28pxに変更 */
  color: var(--md-sys-color-on-surface-variant, #49454f); /* 通常時のアイコン色 */
}

.itemIcon svg {
  width: 100%;
  height: 100%;
}

.itemActive .itemIcon {
  color: var(--md-sys-color-on-secondary-container, #1d192b); /* アクティブ時のアイコン色 */
}

.itemLabel {
  flex-grow: 1;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.itemBadge {
  /* M3 Label Large (ユーザーの要望によりラベルと同じサイズに) */
  /* Font styles are now handled by Typography component */
  margin-left: 12px; /* ラベルとの間隔 */
  /* color: var(--md-sys-color-on-surface-variant, #49454f); Color is now handled by Typography component */
  /* 背景色、パディング、固定サイズ、角丸を削除してシンプルなテキスト表示に */
  /* padding: 0 4px; */
  /* min-width: 16px; */
  /* height: 16px; */
  /* border-radius: 8px; */
  /* background-color: var(--md-sys-color-error, #b3261e); */
  /* display: inline-flex; */ /* 通常のテキストなので不要 */
  /* align-items: center; */ /* 通常のテキストなので不要 */
  /* justify-content: center; */ /* 通常のテキストなので不要 */
  /* box-sizing: border-box; */ /* 通常のテキストなので不要 */
}

.itemActive .itemBadge {
  color: var(--md-sys-color-on-secondary-container, #1d192b); /* アクティブ時のテキスト色に合わせる */
}

.sectionHeader {
  /* M3 Title Small */
  /* Font styles are now handled by Typography component */
  /* color: var(--md-sys-color-on-surface-variant, #49454f); Color is now handled by Typography component */
  height: 48px; /* M3 Section Header height */
  padding: 0 16px;
  display: flex;
  align-items: center;
  margin-top: 8px; /* 前のアイテムとのスペース */
}

.divider {
  height: 1px;
  background-color: var(--md-sys-color-outline-variant, #cac4d0);
  margin: 8px 16px; /* 上下のマージンと左右のパディング */
}

.groupItem {
  /* グループ全体の li 要素。特にスタイルは不要な場合もあるが、マージン調整などに使用可能 */
}

.groupLabel {
  display: flex;
  align-items: center;
  justify-content: space-between; /* アイコンと展開アイコンを両端に配置 */
  height: 56px;
  padding: 0 16px 0 12px; /* item と同様のpadding */
  /* color: var(--md-sys-color-on-surface-variant, #49454f); Color is now handled by Typography component */
  /* Font styles are now handled by Typography component */
  cursor: pointer; /* クリック可能であることを示す */
  position: relative; /* State Layer 用 */
  overflow: hidden; /* State Layer 用 */
  /* コメントアウトされていた古いスタイルは削除 */
}

/* groupLabel にも StateLayer を適用 */
.groupLabel:hover .stateLayer {
  background-color: var(
    --md-sys-color-on-surface-variant-hover,
    rgba(73, 69, 79, 0.08)
  );
}
.groupLabel:focus-visible .stateLayer {
  background-color: var(
    --md-sys-color-on-surface-variant-focus,
    rgba(73, 69, 79, 0.12)
  );
}
.groupLabel:active .stateLayer {
  background-color: var(
    --md-sys-color-on-surface-variant-pressed,
    rgba(73, 69, 79, 0.12)
  );
}

.groupExpandIcon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 28px; /* サイズを24pxから28pxに変更 */
  height: 28px; /* サイズを24pxから28pxに変更 */
  color: var(--md-sys-color-on-surface-variant, #49454f);
  margin-left: 8px; /* ラベルとの間に少しスペース */
}

.groupExpandIcon svg {
  width: 100%;
  height: 100%;
}

.groupItems {
  list-style: none;
  padding: 0; /* group 内の item で padding を制御 */
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: 4px; /* アイテム間のスペース */
  /* ネストされたアイテムのインデント (M3では通常、ネストされたアイテムはインデントされないか、アイコンの有無で調整) */
  /* 必要であれば padding-left を追加 */
  /* padding-left: 24px; */
}

/* Styles for items directly within a group, to indent them */
.groupItems > li > .item,
.groupItems > li > .groupLabel {
  /* groupLabelもネストされる可能性を考慮（現状は非対応だが将来的に） */
  padding-left: calc(12px + 24px); /* 通常の左パディング12px + インデント24px */
}

.groupItems > li > .divider {
  margin-left: calc(16px + 24px); /* 通常の左右マージン16px + インデント24px */
  margin-right: 16px; /* 右マージンは通常通り */
}

/* State Layer */
.stateLayer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0; /* 通常時は透明 */
  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1); /* ホバー時のトランジション */
}

.item:hover .stateLayer,
.item:focus-visible .stateLayer,
.item:active .stateLayer,
.itemActive:hover .stateLayer,
.itemActive:focus-visible .stateLayer,
.itemActive:active .stateLayer {
  opacity: 1; /* 各状態で表示 */
}

/* --- Section Styles --- */
.section {
  /* セクション全体をラップする li 要素 */
  /* 特にスタイルが不要な場合もあるが、セクション間のスペース調整などに使用可能 */
  /* 例: margin-bottom: 8px; */
  padding: 0; /* ul の padding を継承しないように */
  margin: 0;
  list-style: none; /* li のデフォルトスタイルをリセット */
}

.sectionHeadline {
  /* セクションの見出し (Typography をラップする div) */
  /* .sectionHeader と同様のスタイルを適用 */
  height: 48px; /* M3 Section Header height */
  padding: 0 16px; /* 左右のパディング */
  display: flex;
  align-items: center;
  margin-top: 8px; /* 前のセクションやアイテムとのスペース */
}
